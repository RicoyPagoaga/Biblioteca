<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="colIDcliente.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colNombreCliente.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colDireccionCliente.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colAñoCliente.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colTipoMembresiaCliente.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colCorreoCliente.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="colOcupacionCliente.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMjIAAAEAIADIKAAAFgAAACgAAAAyAAAAZAAAAAEAIAAAAAAAECcAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////////wAD////////AAP//
        /////8AA////////wAD////////AAP///////8AA////////wAD////////AAP//8AH//8AA//+AAH//
        wAD//gAAH//AAP/4AAAP/8AA//AAAAP/wAD/4AAAAf/AAP/gAAAB/8AA/8AAAAD/wAD/wAAAAH/AAP+A
        AAAAf8AA/4AAAAB/wAD/gAAAAD/AAP8AAAAAP8AA/wAAAAA/wAD/AAAAAD/AAP8AAAAAP8AA/wAAAAA/
        wAD/AAAAAD/AAP8AAAAAP8AA/wAAAAA/wAD/AAAAAD/AAP8AAAAAP8AA/4AAAAA/wAD/gAAAAH/AAP+A
        AAAAf8AA/8AAAAB/wAD/wAAAAP/AAP/gAAAB/8AA//AAAAH/wAD/+AAAA//AAP/8AAAH/8AA//4AAB//
        wAD//4AAf//AAP//4AH//8AA////////wAD////////AAP///////8AA////////wAD////////AAP//
        /////8AA////////wAD////////AAA==
</value>
  </data>
</root>